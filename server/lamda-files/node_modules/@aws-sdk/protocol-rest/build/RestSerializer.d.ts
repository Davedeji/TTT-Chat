import { BodySerializer, Decoder, Encoder, HttpEndpoint, HttpRequest, OperationModel, RequestSerializer } from "@aws-sdk/types";
export interface UserInput {
    [key: string]: any;
}
export declare class RestSerializer<StreamType> implements RequestSerializer<StreamType> {
    private readonly endpoint;
    private readonly bodySerializer;
    private readonly base64Encoder;
    private utf8Decoder;
    constructor(endpoint: HttpEndpoint, bodySerializer: BodySerializer<string>, base64Encoder: Encoder, utf8Decoder: Decoder);
    serialize(operation: OperationModel, input: any): HttpRequest<StreamType>;
    private serializeBody;
    private serializeNonBody;
    private populateQuery;
    private populateUri;
    private populateHeader;
    /**
     * Used to parse modeled paths that already include query strings.
     * Does not attempt to unescape values.
     * @param queryString
     */
    private parseQueryString;
    /**
     * @api private
     *
     * Add Content-Type header for rest-json protocol explicitly
     * If payload is supplied in input, the content-type should be set according to payload shape;
     * If payload is specified but not supplied in input, no content-type header is needed;
     * If there's no payload in input shape, set content-type as 'application/json';
     * @param operation
     * @param input
     */
    private populateContentTypeHeader;
}
